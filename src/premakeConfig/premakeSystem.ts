import Module from "module";
import { ModuleConfig, ModuleUtility } from "modules/moduleUtils";
import { version } from "os";

const Notice = "-- This is an auto generated file anw wil be regenerated by premake-manager! \n -- Use the premake5"


/**
 * @brief class to generate the premake5 system script file
 */
class premakeSystemGenerator {
    systemScript : string = Notice;

    constructor(modules: ModuleConfig) {
        
    }

    private addModule(module : ModuleConfig) {
        let section : string = "";
        let moduleVersion = this.extractVersion(module.version ?? "");
        let name = ModuleUtility.extractRepositoryName(module.git ?? "");
        if(moduleVersion) {
            section += `print(\" loading module with version: ${moduleVersion} \") \n`
            section += `require(\"modules/${name}\",\"${module.version}}\") \n`
        } else {
            section += `require(\"modules/${name}\") \n`
        }
    }
    private extractVersion(version: string): string | null {
        // Regular expressions to match "x.x.x" and ">=x.x.x"
        const exactVersionRegex = /^\d+\.\d+\.\d+$/; // Matches "x.x.x"
        const greaterThanVersionRegex = /^>=\d+\.\d+\.\d+$/; // Matches ">=x.x.x"
    
        if (exactVersionRegex.test(version)) {
            // Match exact version format "x.x.x"
            return version;
        } else if (greaterThanVersionRegex.test(version)) {
            // Match ">=x.x.x" and extract the version number
            return version.slice(2); // Remove the ">=" prefix
        }
    
        // Return null if no match
        return null;
    }
    
}